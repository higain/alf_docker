#!/bin/bash

scriptname=`basename $0`

function show_usage
{
    echo "Usage: $scriptname [options] command" >&2
    echo "Where options are:" >&2
    echo "  -p        Prefix for server names, e.g. -p 42 will create Alfresco servers 42-alf1 42-alf2 etc." >&2
    echo "  -n        Number of Alfresco servers, e.g. -n 2 to create a cluster of two servers." >&2
    echo "Valid commands are:" >&2
    echo "  create    Create the specified containers." >&2
}

while getopts p:n:h option; do
    case $option in
        p)
            prefix=$OPTARG
            ;;
        n)
            num_alf_servers=$OPTARG
            ;;
        h)
            show_usage
            exit 0
            ;;
    esac
done

shift $((OPTIND-1))

if [[ "$1" == "" ]]; then
    echo "Missing command, see '$scriptname -h' for details." >&2
    exit 1
fi

command=$1

if [[ "$command" != "create" ]]; then
    echo "Invalid command '$command', see '$scriptname -h' for details." >&2
    exit 1
fi

if [[ "$prefix" != "" ]]; then
    prefix="${prefix}-"
fi

if [[ "$num_alf_servers" == "" ]]; then
    num_alf_servers=1
fi

# Create a data volume container
# This is used for the content store shared across all repository instances.
data_container_name=${prefix}alfdata
docker run -d --name $data_container_name -v /alfresco/data ubuntu:14.04 echo 'Alfresco data container'
echo "Created common data container: $data_container_name"

# Create a database server
# The database 'alfresco' may be accessed by the repositories using username 'postgres'
# and password '' (empty/none)
db_server_name=${prefix}alfdb
docker run -d -P --name $db_server_name alfresco
echo "Created database server $db_server_name"

alfresco_image="deltakarlsruhe/alf_docker"

for (( i = 0; i < $num_alf_servers; i++ )); do
    server_name=${prefix}alf$((i+1))
    external_port=$((i+8081))
    external_jmx_port=$((i+1088))
    docker run -d --hostname ${server_name} --name ${server_name} \
                --link $db_server_name:alfdb \
                --volumes-from $data_container_name \
                -p ${external_port}:8080 \
                -p ${external_jmx_port}:1088 \
                ${alfresco_image}

    echo "${server_name} mapped to port ${external_port}"
done
